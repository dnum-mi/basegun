name: Main CI

on:
  pull_request:
    types: [opened, reopened, synchronize]
  workflow_dispatch:
  push:
    branches:
      - develop

jobs:
  pre-commit-check:
    name: Check pre-commit hooks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Pre-commit
        run: pip install pre-commit
      - name: Install Prettier
        working-directory: frontend
        run: |
          npm ci
          npm run format-check
      - run: pre-commit run --all-files

  build-backend:
    name: Build Backend
    uses: ./.github/workflows/build.yml
    with:
      image: ghcr.io/dnum-mi/basegun/basegun-backend
      context: ./backend

  build-frontend:
    name: Build Frontend
    uses: ./.github/workflows/build.yml
    with:
      image: ghcr.io/dnum-mi/basegun/basegun-frontend
      context: ./frontend

  test-backend:
    name: Test Backend
    needs: build-backend
    runs-on: ubuntu-latest
    container:
      image: ${{ needs.build-backend.outputs.image_tag }}
      env:
        AWS_REGION: gra
        AWS_DEFAULT_REGION: gra
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        S3_URL_ENDPOINT: https://s3.gra.io.cloud.ovh.net/
        S3_BUCKET_NAME: basegun-s3
        EMAIL_HOST: mailpit
        EMAIL_PORT: 1025
        OIDC_CONFIG_URL: https://token.actions.githubusercontent.com/.well-known/openid-configuration
        OIDC_JWKS_URL: https://token.actions.githubusercontent.com/.well-known/jwks
        OIDC_JWKS_KID: cc413527-173f-5a05-976e-9c52b1d7b431
        OIDC_CLIENT_ID: basegun
    steps:
      - run: cd /app && pytest
    services:
      mailpit:
        image: axllent/mailpit
        ports:
          - 1025:1025
        env:
          MP_SMTP_AUTH_ACCEPT_ANY: 1
          MP_SMTP_AUTH_ALLOW_INSECURE: 1

  test-frontend-format:
    name: Test Frontend Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Prettier check
        working-directory: frontend
        run: |
          npm ci
          npm run format-check

  test-e2e:
    name: Run E2E tests
    needs: [build-backend, build-frontend]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Start stack using docker compose
        run: docker compose -f docker-compose.yml -f docker-compose.override.ci.yml up -d
      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          working-directory: ./frontend
          command: npm run test:e2e-ci
      - name: Send artifacts
        uses: actions/upload-artifact@v3
        if: ${{ failure() }}
        with:
          name: cypress-screenshots
          path: |
            ./frontend/cypress/screenshots/
